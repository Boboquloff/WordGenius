<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MinimizedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#2ABE3E"
                        CornerRadius="25" >
                        <Path Fill="#2ABE3E" Data="{DynamicResource minimize}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2ABE3E"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#2ABE3E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#2ABE3E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximazedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#f2b22d"
                        CornerRadius="25" >
                        <Path Fill="#f2b22d" Data="{DynamicResource maximize}" Height="12" Width="12" Stretch="UniformToFill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#f2b22d"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#f2b22d"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#f2b22d"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="#F05954"
                        CornerRadius="25" >
                        <Path Fill="#F05954" Data="{DynamicResource close}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#F05954"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#F05954"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#F05954"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0 3 0 3"/> 
        <Setter Property="Template"> 
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="B" CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Indicator" Grid.Column="0"
                                    Visibility="Collapsed"
                                    Height="30"
                                    CornerRadius="5"
                                    Background="{DynamicResource SecondaryBackground}"/>
                            <Path x:Name="icon"
                                  Data="{Binding Tag,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" 
                                  Stretch="UniformToFill"
                                  Height="20" Width="20"
                                  Fill="White"
                                  Grid.Column="1"/>
                            <Label x:Name="MenuText" Grid.Column="2"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="White"
                                       FontFamily="Segoi UI"
                                       VerticalAlignment="Center"
                                       Content ="{TemplateBinding Content}" 
                                       />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource SelectedBackground}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="MenuText" Property="Foreground" Value="{DynamicResource TextColorChecked}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style x:Key="ReverseButton" TargetType="{x:Type Button}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B"
                        Background="White"
                        >
                        <Path Fill="Black" Data="{DynamicResource reverse}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>